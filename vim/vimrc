"" Thanks:
"  Tim Pope
"  Mislav Marohnić
"  Janus


execute pathogen#infect('bundle/{}', 'colors/{}', 'tools/{}')
syntax enable                " syntax highlighting 
filetype plugin indent on    " enable loading indent file for filetype


set nocompatible
set encoding=utf-8

set noswapfile
set history=50

set autoindent
set number
set ruler                 " show the cursor position all the time
set shiftround            " always indent/outdent to the nearest tabstop
set expandtab             " use spaces instead of tabs
set smarttab              " use tabs at the start of a line, spaces elsewhere
set display=lastline
set laststatus=2 
set lazyredraw
set showmatch             " show matching brackets
set showcmd               " show partial commands below the status line
set nowrap                " don't wrap text


" Tabs
set backspace=2
set tabstop=2             " tab spacing
set softtabstop=2         " unify
set shiftwidth=2          " indent/outdent by 4 columns

set hidden

" Auto-reload buffers when file changed on disk
set autoread

" Disable swap files; systems don't crash that often these days
set updatecount=0

set list                          " show invisible characters
set backspace=indent,eol,start    " backspace through everything in insert mode

set nojoinspaces                  " Use only 1 space after "." when joining lines, not 2


" Indicator chars
set listchars=tab:▸\ ,trail:•,extends:❯,precedes:❮
set showbreak=↪\ 


" Searching
set hlsearch                      " highlight matches
set incsearch                     " incremental searching
set ignorecase                    " searches are case insensitive...
set smartcase                     " ... unless they contain at least one capital letter
set gdefault                      " have :s///g flag by default on


function s:setupWrapping()
  set wrap
  set wrapmargin=2
  set textwidth=80
endfunction

if has("autocmd")
  " Avoid showing trailing whitespace when in insert mode
  au InsertEnter * :set listchars-=trail:•
  au InsertLeave * :set listchars+=trail:•

  " In Makefiles, use real tabs, not tabs expanded to spaces
  au FileType make set noexpandtab

  " Make sure all markdown files have the correct filetype set and setup wrapping
  au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn,txt} setf markdown | call s:setupWrapping()

  " Treat JSON files like JavaScript
  au BufNewFile,BufRead *.json set ft=javascript

  " Start with nerdtree
  au vimenter * if !argc() | NERDTree | endif

  " Set cursorline to only current active buffer/window
  "au VimEnter,WinEnter,BufWinEnter,BufEnter * setlocal cursorline
  "au WinLeave,BufLeave * setlocal nocursorline

endif

" toggle the current fold
":nnoremap <Space> za


let mapleader = ","
let g:Powerline_symbols = 'fancy'
let g:Powerline_cache_enabled = 1

map <Leader>rrt :!ctags --extra=+f -R *<CR><CR>
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

"NERDTree settings
map <Leader>n :NERDTreeToggle<CR>


" In command-line mode, C-a jumps to beginning (to match C-e)
cnoremap <C-a> <Home>

set splitright
set splitbelow


" disable cursor keys in normal mode
map <Left>  :echo "no!"<cr>
map <Right> :echo "no!"<cr>
map <Up>    :echo "no!"<cr>
map <Down>  :echo "no!"<cr>

if has("statusline") && !&cp
  set laststatus=2              " always show the status bar
  set statusline=%f\ %m\ %r     " filename, modified, readonly
  set statusline+=%{fugitive#statusline()}
  set statusline+=\ %l/%L[%p%%] " current line/total lines
  set statusline+=\ %v[0x%B]    " current column [hex char]
endif
