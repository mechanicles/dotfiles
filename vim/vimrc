" Thanks: 
"  Tim Pope
"  Mislav Marohnić
"  Janus Vim Distribution
"  Other

let g:pathogen_disabled = ['vim-powerline', 'vim-airline', 'YouCompleteMe']
execute pathogen#infect('bundle/{}', 'colors/{}', 'tools/{}', '/Users/santoshwadghule/local_vim_plugins')
"call pathogen#helptags()


" Basic setup ---------------------------------------------
syntax enable                     " syntax highlighting

" Use Vim settings, rather then Vi settings (much better!).
set nocompatible

" Colorscheme
colorscheme molokai

set number                        " enable line numbers
set ruler                         " show the cursor position all the time
set title                         " show file in titlebar
filetype plugin indent on         " enable loading indent file for filetype
set encoding=utf-8                " set default encoding to UTF-8
set history=50                    " keep 50 lines of command line history
let mapleader = ","
set mouse=a                       " automatically enable mouse usage
set mousehide                     " hide the mouse cursor while typing
set textwidth=80

" Whitespace -----------------------------------------------
set nowrap                        " don't wrap text
set tabstop=2                     " tab spacing
set softtabstop=2                 " unify
set shiftwidth=2                  " indent/outdent by 2 columns
set expandtab                     " use spaces instead of tabs
set smarttab                      " use tabs at the start of a line, spaces elsewhere
set backspace=indent,eol,start    " backspace through everything in insert mode
set list                          " show invisible characters
set nojoinspaces                  " Use only 1 space after "." when joining lines, not 2


"if exists("g:enable_mvim_shift_arrow")
  "let macvim_hig_shift_movement = 1 " mvim shift-arrow-keys
"endif

" Misc ---------------------------------------------------- 
highlight clear SignColumn        " SignColumn should match background for things like vim-gitgutter
set autoindent                    " always set auto indenting on
set display=lastline
set lazyredraw                    " don't redraw while executing macros (good performance config)
set showmatch                     " show matching brackets
set showcmd                       " show partial commands below the status line

set scrolljump=5                  " lines to scroll when cursor leaves screen
set scrolloff=3                   " minimum lines to keep above and below cursor
set hidden
set foldenable                    " auto fold code

" Auto-reload buffers when file changed on disk
set autoread

" Disable swap files; systems don't crash that often these days
set updatecount=0

" Indicator chars
set listchars=tab:▸\ ,trail:•,extends:❯,precedes:❮
set showbreak=↪\


" Searching -----------------------------------------------
set hlsearch                      " highlight matches
set incsearch                     " incremental searching
set ignorecase                    " searches are case insensitive...
set smartcase                     " unless they contain at least one capital letter
set gdefault                      " have :s///g flag by default on


" Disable output and VCS files
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem

" Disable archive files
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz

" Ignore bundler and sass cache
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*

" Disable temp and backup files
set wildignore+=*.swp,*~,._*

" Backup and swap files ------------------------------------
set nobackup                      " turn backup off, since most stuff is in SVN, Git etc anyway...
set nowb
set noswapfile


" Open new split panes to right and bottom, which feels more natural
set splitright
set splitbelow

" Easy edit/open commands ----------------------------------
command EditVim  :edit   ~/.vimrc
command EditBash :edit   ~/.bashrc

if has("statusline") && !&cp
  set laststatus=2              " always show the status bar
  set statusline=%f\ %m\ %r     " filename, modified, readonly
  set statusline+=%{fugitive#statusline()}
  set statusline+=\ %l/%L[%p%%] " current line/total lines
  set statusline+=\ %v[0x%B]    " current column [hex char]
endif

" The silver searcher (Faster than the ack)
" Invoke ag using ack.vim
let g:ackprg = 'ag --nogroup --nocolor --column'

" NERDTree settings
let g:NERDTreeHijackNetrw=0
let g:nerdtree_tabs_open_on_console_startup=1
map <Leader>n :NERDTreeToggle<CR>

function s:setupWrapping()
  set wrap
  set wrapmargin=2
  set textwidth=80
endfunction

if has("autocmd")
  " Start with nerdtree
  au vimenter * if !argc() | NERDTree | endif

  " Avoid showing trailing whitespace when in insert mode
  au InsertEnter * :set listchars-=trail:•
  au InsertLeave * :set listchars+=trail:•

  " In Makefiles, use real tabs, not tabs expanded to spaces
  au FileType make set noexpandtab

  " Make sure all markdown files have the correct filetype set and setup wrapping
  au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn,txt} setf markdown | call s:setupWrapping()

  " Treat JSON files like JavaScript
  au BufNewFile,BufRead *.json set ft=javascript

  " Better commit message
  au Filetype gitcommit setlocal spell textwidth=72
endif

" Mappings
map <Leader>rrt :!ctags --extra=+f -R *<CR><CR>

"map <C-h> <C-w>h
"map <C-j> <C-w>j
"map <C-k> <C-w>k
"map <C-l> <C-w>l

map <c-a> ggVG

" format the entire file
nmap <leader>fef ggVG=

" upper/lower word
nmap <leader>u mQviwU`Q
nmap <leader>l mQviwu`Q

" upper/lower first char of word
nmap <leader>U mQgewvU`Q
nmap <leader>L mQgewvu`Q

" find Git merge conflict markers
nmap <silent> <leader>fc <ESC>/\v^[<=>]{7}( .*\|$)<CR>

" Toggle hlsearch with <leader>hs
nmap <leader>hs :set hlsearch! hlsearch?<CR>

" Adjust viewports to the same size
map <Leader>= <C-w>=

" ZoomWin map
map <Leader>zw :ZoomWin<cr>

" TagbarToggle
map <Leader>rt :TagbarToggle<cr>

" disable cursor keys in normal mode
map <Left>  :echoe "Use h (Real programmers use Vim!)"<cr>
map <Right> :echoe "Use l (Real programmers use Vim!)"<cr>
map <Up>    :echoe "Use k (Real programmers use Vim!)"<cr>
map <Down>  :echoe "Use j (Real programmers use Vim!)"<cr>

"Bubble single lines
nmap <C-k> [e
nmap <C-j> ]e

"Bubble multiple lines
vmap <C-k> [egv
vmap <C-j> ]egv

"Make shift-insert work like in Xterm
map <S-Insert> <MiddleMouse>
map! <S-Insert> <MiddleMouse>

"Map Control-# to switch tabs
map  <C-0> 0gt
imap <C-0> <Esc>0gt
map  <C-1> 1gt
imap <C-1> <Esc>1gt
map  <C-2> 2gt
imap <C-2> <Esc>2gt
map  <C-3> 3gt
imap <C-3> <Esc>3gt
map  <C-4> 4gt
imap <C-4> <Esc>4gt
map  <C-5> 5gt
imap <C-5> <Esc>5gt
map  <C-6> 6gt
imap <C-6> <Esc>6gt
map  <C-7> 7gt
imap <C-7> <Esc>7gt
map  <C-8> 8gt
imap <C-8> <Esc>8gt
map  <C-9> 9gt
imap <C-9> <Esc>9gt

noremap <F5> :UndotreeToggle<cr>

" In command-line mode, C-a jumps to beginning (to match C-e)
cnoremap <C-a> <Home>

" paste lines from unnamed register and fix indentation
nmap <leader>p pV`]=
nmap <leader>P PV`]=

if $TMUX == ''
  set clipboard+=unnamed
endif

" Local config
if filereadable($HOME . "/.vimrc.local")
  source ~/.vimrc.local
endif

